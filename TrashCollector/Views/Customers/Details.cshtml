@model TrashCollector.Models.Customer

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>

<div>
    <h4>Customer</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FirstName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AppUser.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.AppUser.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Address.StreetAddress)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address.StreetAddress)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Address.City)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address.City)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Address.State)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address.State)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Address.ZipCode)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address.ZipCode)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Account.PickupDay)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Account.PickupDay)
        </dd>
    </dl>
</div>
<div id="maps" style="height: 500px; width: 500px">

</div>
<script>
   
    function initMap() {
        var myLatLng = { lat: @Model.Address.Lat, lng: @Model.Address.Lng};
        var map = new google.maps.Map(document.getElementById('maps'), {
            zoom: 15,
            center: myLatLng
        });
        var marker = new google.maps.Marker({
            position: myLatLng,
            map: map

        });

    }
             
       
        //     function geocodeAddress(geocoder, resultsMap) {
        //var address = document.getElementById('address').value;
        //geocoder.geocode({'address': address}, function(results, status) {
        //  if (status === 'OK') {
        //    resultsMap.setCenter(results[0].geometry.location);
        //    var marker = new google.maps.Marker({
        //      map: resultsMap,
        //      position: results[0].geometry.location
        //    });
        //  } else {
        //    alert('Geocode was not successful for the following reason: ' + status);
        //  }
        //});
        //     }
</script>

<script async defer
        src=@ViewBag.mymap>
</script>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
